<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Live Updates</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      background-color: #f4f6f9;
      font-family: 'Arial', sans-serif;
      color: #333;
    }

    h1 {
      font-size: 2.5rem;
      font-weight: 600;
      color: #2c3e50;
      text-align: center;
      margin-top: 30px;
    }

    h2 {
      font-size: 1.75rem;
      font-weight: 500;
      color: #34495e;
      margin-top: 30px;
      border-bottom: 2px solid #e1e1e1;
      padding-bottom: 10px;
    }

    ul {
      list-style-type: none;
      padding-left: 0;
      margin-top: 15px;
    }

    li {
      background-color: #fff;
      border-radius: 8px;
      margin-bottom: 15px;
      padding: 15px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transition: transform 0.2s;
    }

    li:hover {
      transform: scale(1.02);
    }

    strong {
      font-weight: 600;
    }

    .summary-item {
      font-size: 1.1rem;
      color: #34495e;
    }

    .vote-summary {
      margin-top: 20px;
    }

    .summary-item span {
      color: #16a085;
    }

    .chart-container {
      width: 80%;
      margin: 0 auto;
      margin-top: 50px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Live Updates</h1>

    <!-- Constituency Summary -->
    <h2>Constituency Summary</h2>
    <ul>
      <% @summary[:constituencies].each do |constituency| %>
        <li>
          <div class="summary-item">
            <strong><%= constituency[:name] %></strong><br>
            Total Candidates: <span><%= constituency[:total_candidates] %></span><br>
            Total Votes: <span><%= constituency[:total_votes] %></span>
          </div>
        </li>
      <% end %>
    </ul>

    <!-- Candidate Summary -->
    <h2>Candidate Summary</h2>
    <ul>
      <% @summary[:candidates].each do |candidate| %>
        <li>
          <div class="summary-item">
            <strong><%= candidate[:name] %></strong><br>
            Constituency: <span><%= candidate[:constituency] %></span><br>
            Votes: <span><%= candidate[:vote_count] %></span>
          </div>
        </li>
      <% end %>
    </ul>

    <!-- Vote Count Summary -->
    <h2>Vote Count Summary</h2>
    <ul>
      <% @summary[:vote_counts].each do |vote_count| %>
        <li>
          <div class="vote-summary">
            <strong><%= vote_count[:candidate_name] %></strong><br>
            Total Votes: <span><%= vote_count[:total_votes] %></span>
          </div>
        </li>
      <% end %>
    </ul>

    <!-- Bar Chart -->
    <div class="chart-container">
      <h2>Votes by Constituency (Bar Chart)</h2>
      <canvas id="barChart"></canvas>
    </div>

    <!-- Pie Chart -->
    <div class="chart-container">
      <h2>Votes Distribution (Pie Chart)</h2>
      <canvas id="pieChart"></canvas>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Data for the charts
    const constituencyData = <%= raw @summary[:constituencies].to_json %>;
    const candidateData = <%= raw @summary[:candidates].to_json %>;

    // Bar Chart - Votes by Constituency
    const ctxBar = document.getElementById('barChart').getContext('2d');
    const barChart = new Chart(ctxBar, {
      type: 'bar',
      data: {
        labels: constituencyData.map(item => item.name),
        datasets: [{
          label: 'Total Votes by Constituency',
          data: constituencyData.map(item => item.total_votes),
          backgroundColor: 'rgba(54, 162, 235, 0.2)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });

    // Pie Chart - Votes Distribution by Candidate
    const ctxPie = document.getElementById('pieChart').getContext('2d');
    const pieChart = new Chart(ctxPie, {
      type: 'pie',
      data: {
        labels: candidateData.map(item => item.name),
        datasets: [{
          label: 'Vote Distribution',
          data: candidateData.map(item => item.vote_count),
          backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#FFD633', '#33FFF2'],
          hoverOffset: 4
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            position: 'top',
          },
          tooltip: {
            callbacks: {
              label: function(tooltipItem) {
                return tooltipItem.label + ': ' + tooltipItem.raw + ' votes';
              }
            }
          }
        }
      }
    });
  </script>
</body>
</html>
